import React, { useState } from 'react';
import {
    Box,
    Button,
    ChakraProvider,
    Flex,
    HStack,
    Text,
    Tooltip,
    extendTheme
  } from '@chakra-ui/react';

import { CapsuleModal } from '@usecapsule/web-sdk/dist/modal/CapsuleModal';

const truncateEthAddress = (address) => {
    const match = address.match(/^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/);
    if (!match) return address;
    return `${match[1]}â€¦${match[2]}`;
  };

  function CapsuleBox() {
    return (
      <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_661_58207)">
          <path d="M0 16C0 10.3995 0 7.59921 1.08993 5.46009C2.04867 3.57847 3.57847 2.04867 5.46009 1.08993C7.59921 0 10.3995 0 16 0H32C37.6005 0 40.4008 0 42.5399 1.08993C44.4215 2.04867 45.9513 3.57847 46.9101 5.46009C48 7.59921 48 10.3995 48 16V32C48 37.6005 48 40.4008 46.9101 42.5399C45.9513 44.4215 44.4215 45.9513 42.5399 46.9101C40.4008 48 37.6005 48 32 48H16C10.3995 48 7.59921 48 5.46009 46.9101C3.57847 45.9513 2.04867 44.4215 1.08993 42.5399C0 40.4008 0 37.6005 0 32V16Z" fill="url(#paint0_linear_661_58207)"/>
          <path d="M0 16C0 10.3995 0 7.59921 1.08993 5.46009C2.04867 3.57847 3.57847 2.04867 5.46009 1.08993C7.59921 0 10.3995 0 16 0H32C37.6005 0 40.4008 0 42.5399 1.08993C44.4215 2.04867 45.9513 3.57847 46.9101 5.46009C48 7.59921 48 10.3995 48 16V32C48 37.6005 48 40.4008 46.9101 42.5399C45.9513 44.4215 44.4215 45.9513 42.5399 46.9101C40.4008 48 37.6005 48 32 48H16C10.3995 48 7.59921 48 5.46009 46.9101C3.57847 45.9513 2.04867 44.4215 1.08993 42.5399C0 40.4008 0 37.6005 0 32V16Z" fill="url(#paint1_linear_661_58207)"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M1.13292 9.51345C1.00078 11.1308 1 13.1832 1 16V32C1 34.8168 1.00078 36.8692 1.13292 38.4865C1.26411 40.0922 1.51977 41.1808 1.98094 42.0859C2.8438 43.7794 4.22063 45.1562 5.91409 46.0191C6.81918 46.4802 7.90777 46.7359 9.51345 46.8671C11.1308 46.9992 13.1832 47 16 47H32C34.8168 47 36.8692 46.9992 38.4865 46.8671C40.0922 46.7359 41.1808 46.4802 42.0859 46.0191C43.7794 45.1562 45.1562 43.7794 46.0191 42.0859C46.4802 41.1808 46.7359 40.0922 46.8671 38.4865C46.9992 36.8692 47 34.8168 47 32V16C47 13.1832 46.9992 11.1308 46.8671 9.51345C46.7359 7.90777 46.4802 6.81918 46.0191 5.91408C45.1562 4.22063 43.7794 2.8438 42.0859 1.98094C41.1808 1.51977 40.0922 1.26411 38.4865 1.13292C36.8692 1.00078 34.8168 1 32 1H16C13.1832 1 11.1308 1.00078 9.51345 1.13292C7.90777 1.26411 6.81918 1.51977 5.91409 1.98094C4.22063 2.8438 2.8438 4.22063 1.98094 5.91409C1.51977 6.81918 1.26411 7.90777 1.13292 9.51345ZM1.08993 5.46009C0 7.59921 0 10.3995 0 16V32C0 37.6005 0 40.4008 1.08993 42.5399C2.04867 44.4215 3.57847 45.9513 5.46009 46.9101C7.59921 48 10.3995 48 16 48H32C37.6005 48 40.4008 48 42.5399 46.9101C44.4215 45.9513 45.9513 44.4215 46.9101 42.5399C48 40.4008 48 37.6005 48 32V16C48 10.3995 48 7.59921 46.9101 5.46009C45.9513 3.57847 44.4215 2.04867 42.5399 1.08993C40.4008 0 37.6005 0 32 0H16C10.3995 0 7.59921 0 5.46009 1.08993C3.57847 2.04867 2.04867 3.57847 1.08993 5.46009Z" fill="black" fill-opacity="0.04"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M3.59371 9.64313C3.50039 10.7853 3.5 12.2316 3.5 14.2V33.8C3.5 35.7684 3.50039 37.2147 3.59371 38.3569C3.68655 39.4932 3.86888 40.2845 4.20846 40.9509C4.83163 42.174 5.82601 43.1684 7.04906 43.7915C7.71552 44.1311 8.50679 44.3134 9.64313 44.4063C10.7853 44.4996 12.2316 44.5 14.2 44.5H33.8C35.7684 44.5 37.2147 44.4996 38.3569 44.4063C39.4932 44.3134 40.2845 44.1311 40.9509 43.7915C42.174 43.1684 43.1684 42.174 43.7915 40.9509C44.1311 40.2845 44.3134 39.4932 44.4063 38.3569C44.4996 37.2147 44.5 35.7684 44.5 33.8V14.2C44.5 12.2316 44.4996 10.7853 44.4063 9.64313C44.3134 8.50679 44.1311 7.71552 43.7915 7.04906C43.1684 5.82601 42.174 4.83163 40.9509 4.20846C40.2845 3.86888 39.4932 3.68655 38.3569 3.59371C37.2147 3.50039 35.7684 3.5 33.8 3.5H14.2C12.2316 3.5 10.7853 3.50039 9.64313 3.59371C8.50679 3.68655 7.71552 3.86888 7.04906 4.20846C5.82601 4.83163 4.83163 5.82601 4.20846 7.04906C3.86888 7.71552 3.68655 8.50679 3.59371 9.64313ZM3.76295 6.82207C3 8.31945 3 10.2796 3 14.2V33.8C3 37.7204 3 39.6805 3.76295 41.1779C4.43407 42.4951 5.50493 43.5659 6.82207 44.237C8.31945 45 10.2796 45 14.2 45H33.8C37.7204 45 39.6805 45 41.1779 44.237C42.4951 43.5659 43.5659 42.4951 44.237 41.1779C45 39.6805 45 37.7204 45 33.8V14.2C45 10.2796 45 8.31945 44.237 6.82207C43.5659 5.50493 42.4951 4.43407 41.1779 3.76295C39.6805 3 37.7204 3 33.8 3H14.2C10.2796 3 8.31945 3 6.82207 3.76295C5.50493 4.43407 4.43407 5.50493 3.76295 6.82207Z" fill="black" fill-opacity="0.2"/>
          <g clip-path="url(#clip1_661_58207)">
            <path d="M28.2026 21.3831C28.0669 21.8583 27.5479 22.0937 27.0956 21.9044C26.6878 21.7337 26.4835 21.2768 26.5836 20.8426C26.6472 20.5667 26.693 20.304 26.7211 20.0543C26.7763 19.5787 26.7757 19.156 26.7193 18.7861C26.6629 18.4162 26.5513 18.1098 26.3844 17.8668C26.2226 17.619 26.0114 17.4406 25.7505 17.3314C25.2872 17.1375 24.7747 17.214 24.2132 17.5608C23.6541 17.9017 23.0782 18.5056 22.4854 19.3726C21.8951 20.2337 21.32 21.3471 20.7601 22.7126C20.1905 24.1019 19.8119 25.3147 19.6242 26.3513C19.4417 27.383 19.4287 28.2156 19.5851 28.849C19.7467 29.4776 20.0578 29.8882 20.5183 30.081C20.7736 30.1878 21.0413 30.2167 21.3214 30.1677C21.6068 30.114 21.8964 29.9825 22.1903 29.773C22.487 29.5648 22.7812 29.2792 23.073 28.9165C23.2258 28.7288 23.3747 28.5209 23.5197 28.2927C23.7592 27.9156 24.2274 27.7415 24.6352 27.9177C25.084 28.1115 25.2814 28.6483 25.0398 29.0768C24.743 29.6032 24.4254 30.0929 24.0871 30.5459C23.5854 31.2225 23.0604 31.7855 22.5121 32.2347C21.9663 32.6781 21.4186 32.9753 20.8691 33.1262C20.322 33.2713 19.7946 33.2376 19.2869 33.0252C18.5377 32.7116 18.0205 32.0623 17.7353 31.0772C17.45 30.0922 17.4242 28.8312 17.6577 27.2944C17.8912 25.7576 18.4078 24.0138 19.2077 22.063C20.0099 20.1063 20.8665 18.5047 21.7774 17.2583C22.6906 16.006 23.5929 15.1334 24.4841 14.6406C25.3752 14.1478 26.1926 14.057 26.9362 14.3682C27.4107 14.5667 27.7937 14.8932 28.0852 15.3476C28.3768 15.8021 28.5694 16.3709 28.663 17.0542C28.7591 17.7316 28.7474 18.5094 28.628 19.3874C28.5464 20.0108 28.4046 20.676 28.2026 21.3831Z" fill="white"/>
            <path d="M26.5299 24.7374C26.7601 24.1766 27.3975 23.9102 27.9535 24.1426L28.0068 24.1648C28.5628 24.3972 28.8268 25.0402 28.5965 25.601C28.3662 26.1619 27.7288 26.4283 27.1729 26.1959L27.1195 26.1736C26.5636 25.9413 26.2996 25.2983 26.5299 24.7374Z" fill="white"/>
          </g>
        </g>
        <defs>
          <linearGradient id="paint0_linear_661_58207" x1="24" y1="0" x2="24" y2="48" gradientUnits="userSpaceOnUse">
            <stop stop-color="#174299"/>
            <stop offset="1" stop-color="#001E59"/>
          </linearGradient>
          <linearGradient id="paint1_linear_661_58207" x1="24" y1="0" x2="24" y2="48" gradientUnits="userSpaceOnUse">
            <stop/>
          </linearGradient>
          <clipPath id="clip0_661_58207">
            <rect width="48" height="48" fill="white"/>
          </clipPath>
          <clipPath id="clip1_661_58207">
            <rect width="13" height="22" fill="white" transform="translate(17.5 13)"/>
          </clipPath>
        </defs>
      </svg>
    );
  }

  function CapsuleSmall({
    w = 13,
    h = 22,
  }) {
    return (
      <svg
        width={w}
        height={h}
        viewBox="0 0 13 22"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M10.7026 8.38503C10.5669 8.86025 10.0479 9.09561 9.59557 8.90633C9.18783 8.7357 8.98348 8.27879 9.08361 7.84456C9.14721 7.56868 9.19304 7.30591 9.22109 7.05625C9.2763 6.58069 9.27571 6.15796 9.21933 5.78807C9.16293 5.41818 9.05128 5.11174 8.88436 4.86874C8.72263 4.62099 8.51135 4.44255 8.25055 4.3334C7.78718 4.1395 7.27475 4.21595 6.71323 4.56274C6.15412 4.90362 5.57819 5.50756 4.98542 6.37458C4.39507 7.23566 3.81996 8.34901 3.26007 9.71458C2.69049 11.1038 2.31186 12.3167 2.12417 13.3532C1.94169 14.385 1.92866 15.2176 2.08507 15.8509C2.24667 16.4795 2.55776 16.8902 3.01834 17.0829C3.27361 17.1897 3.5413 17.2186 3.82144 17.1697C4.10678 17.116 4.39641 16.9844 4.69033 16.775C4.98701 16.5667 5.28124 16.2812 5.57299 15.9184C5.72581 15.7308 5.87471 15.5229 6.01967 15.2947C6.25921 14.9176 6.72737 14.7435 7.13517 14.9196C7.58401 15.1135 7.78142 15.6502 7.53983 16.0788C7.24302 16.6052 6.92545 17.0949 6.5871 17.5479C6.08542 18.2244 5.56043 18.7874 5.01215 19.2367C4.46628 19.6801 3.91861 19.9773 3.3691 20.1282C2.82203 20.2733 2.29462 20.2395 1.78687 20.0271C1.03772 19.7135 0.520524 19.0643 0.235276 18.0791C-0.0499729 17.0942 -0.0758444 15.8332 0.15766 14.2964C0.391164 12.7596 0.907835 11.0158 1.70767 9.06494C2.50994 7.10821 3.36651 5.50663 4.27736 4.26023C5.19065 3.00791 6.09288 2.13535 6.98407 1.64255C7.87525 1.14975 8.69264 1.05894 9.43623 1.37011C9.9107 1.56866 10.2937 1.89515 10.5852 2.34958C10.8768 2.80402 11.0694 3.37289 11.163 4.0562C11.2591 4.73359 11.2474 5.51132 11.128 6.3894C11.0464 7.01276 10.9046 7.67797 10.7026 8.38503Z"
          fill="white"
        />
        <path
          d="M9.03 11.7374C9.26029 11.1766 9.89766 10.9102 10.4536 11.1426L10.507 11.1648C11.0629 11.3972 11.3269 12.0402 11.0966 12.601C10.8664 13.1619 10.229 13.4283 9.67303 13.1959L9.61968 13.1736C9.06372 12.9413 8.79972 12.2983 9.03 11.7374Z"
          fill="white"
        />
      </svg>
    );
  }

function Helper() {
    return (
      <Box
        w="300px"
        h="158px"
        backgroundColor="brand.background"
        padding="18px"
        display={'flex'}
        flexDirection={'column'}
      >
        <Text fontSize="18px" color="brand.content">
          What is Connect?
        </Text>
        <HStack flex={1}>
          <Box width="60px">
            <CapsuleBox />
          </Box>
          <Flex flexDirection="column" alignItems="left" justifyContent="center">
            <Text fontSize="xs" color="brand.content">
              A New Way to Log In
            </Text>
            <Text fontSize="xs" color="brand.dimmed2">
              Get started and create a wallet or log in, powered by Capsule.
            </Text>
          </Flex>
        </HStack>
      </Box>
    );
  }
  
  export default function CapsuleButton({
    capsule,
    appName,
    loginCallback, // added this prop manually
    width = 163,
    height = 50,
  }) {
    const [modalIsOpen, setModalIsOpen] = useState(false);
    const [address, setAddress] = useState(
      Object.values(capsule.getWallets())?.[0]?.address,
    );
  
    return (
      <ChakraProvider theme={newTheme}>
        <CapsuleModal
          appName={appName}
          isOpen={modalIsOpen}
          onClose={() => {
            const newAddress = Object.values(capsule.getWallets())?.[0]?.address;
            setAddress(newAddress);
            setModalIsOpen(false);
            loginCallback(true);
          }}
          theme={newTheme}
          capsule={capsule}
        />
        <HStack>
          {address ? (
            <Text textColor={'brand.addressColor'}>
              {truncateEthAddress(address)}
            </Text>
          ) : null}
          <Tooltip
            isDisabled={!!address}
            label={<Helper />}
            backgroundColor={'brand.background'}
            borderRadius="4px"
          >
            <Button
              width={`${width}px`}
              height={`${height}px`}
              backgroundColor={'brand.background'}
              color={'white'}
              onClick={() => {
                if (address) {
                  capsule.logout().then(() => {
                    setAddress(undefined);
                    loginCallback(false);
                  });
                } else {
                  setModalIsOpen(true);
                }
              }}
            >
              <Text size="18px" marginRight="9px">
                {address ? 'Logout' : 'Connect'}
              </Text>
              <CapsuleSmall />
            </Button>
          </Tooltip>
        </HStack>
      </ChakraProvider>
    );
  }

  const newTheme = extendTheme({
    colors: {
      brand: {
        background: '#080B0F',
        content: '#FFFFFF',
        dimmed: '#E5E5E5',
        dimmed2: '#C8C8C8',
        text: '#E5E5E5',
        addressColor: '#E5E5E5',
        contentSecondary: '#39393A',
      },
    },
    components: {
      Text: {
        baseStyle: {
          color: 'brand.text',
          fontSize: 'm',
        },
        defaultProps: {
          fontSize: '40px',
        },
      },
    },
    fontSizes: {
      l: '24px',
      ml: '22px',
      m: '16px',
      s: '14px',
      xs: '12px',
    },
  });
  